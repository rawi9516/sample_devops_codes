variables:
  # Agent VM image name for Build agents
  vmImageName: 'ubuntu-latest'

  # Providing the python version
  pythonVersion: '3.11'

#list of parameters that are needed as dynamic inputs for the pipelines.
parameters:
  - name: exchange
    displayName: 'Select The Global Exchange:'
    default: 'LSE'
    values:
      - LSE
      - NASDAQ
      - NYSE
      - NSE

  - name: number_of_files
    type: number
    displayName: 'Number Of Sampled Files'
    default: 1
    values:
      - 1
      - 2

  - name: first_sample_file
    type: string
    displayName: 'First Sample File Name'
    default: "None"

  - name: second_sample_file
    type: string
    displayName: 'Second Sample File Name'
    default: "None"

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: ValidateParameters
    displayName: 'input parameters validation'
    steps:
      - script: |

          echo "Checking if the parameters are valid"

          # Remove multiple-spaces from the parameters or file names

          first_sample_file="${{ parameters.first_sample_file }}"
          second_sample_file="${{ parameters.second_sample_file }}"

          # Check if first_sample_file is null, empty, or only spaces and assign default name None
          if [ -z "${first_sample_file// /}" ] || [ "$first_sample_file" == "null" ]; then
            echo "Warning: 'first_sample_file' is null, empty, or only spaces."
            echo "##vso[task.setvariable variable=first_default_filename;isOutput=true]None"
          else
            echo "##vso[task.setvariable variable=first_default_filename;isOutput=true]${first_sample_file}"
          fi

          # Check if second_sample_file is null, empty, or just spaces and assign default name None 
          if [ -z "${second_sample_file// /}" ] || [ "$second_sample_file" == "null" ]; then
            echo "Warning: 'second_sample_file' is null, empty, or only spaces."
            echo "##vso[task.setvariable variable=second_default_filename;isOutput=true]None"
          else
            echo "##vso[task.setvariable variable=second_default_filename;isOutput=true]${second_sample_file}"
          fi
        displayName: "Validate and Set Parameters"
        name: var

  - job: BuildJob
    dependsOn: ValidateParameters
    variables:
      final_first_filename: $[ dependencies.ValidateParameters.outputs['var.first_default_filename'] ]  
      final_second_filename: $[ dependencies.ValidateParameters.outputs['var.second_default_filename'] ]
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        python -m pip install --upgrade pip
        pip install setup
        pip install pandas
        which python
      workingDirectory: $(System.DefaultWorkingDirectory)
      displayName: "script dependent softwares"

    - script: |

        echo "steps to execute script"

        # if both file names are empty then ignore execution
        if [[ "$(final_first_filename)" == "None" && "$(final_second_filename)" == "None" ]]; then
          echo "Both input file names are None, so not executing scripts"
        else
          # Running the python script with parameters
          python script/data_outliers.py ${{ parameters.exchange }} ${{ parameters.number_of_files }} "$(final_first_filename)" "$(final_second_filename)"
        fi
      displayName: 'Script execution step'

    - script: |
        find . -type f -name "*-outliers.csv" -exec cat {} \;
      displayName: 'display outliers CSV content to logs'
